#include <WiFi.h>
#include <HTTPClient.h>
#include <ArduinoJson.h>
#include "time.h"

// WiFi credentials
const char* ssid = "YOUR_WIFI_SSID";
const char* password = "YOUR_WIFI_PASSWORD";

// NTP Server settings for date/time
const char* ntpServer = "pool.ntp.org";
const long gmtOffset_sec = 0;      // Adjust for your timezone (in seconds)
const int daylightOffset_sec = 3600; // Adjust for daylight saving

// Your web server endpoint
const char* serverUrl = "https://your-server.com/api/sales";

void setup() {
  Serial.begin(9600);  // For ESP32 debugging
  Serial2.begin(9600); // Use Serial2 to communicate with Arduino Uno

  // Connect to WiFi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.print("Connected to WiFi with IP: ");
  Serial.println(WiFi.localIP());

  // Initialize and get the time
  configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);
}

void loop() {
  // Check if data is available from Arduino Uno
  if (Serial2.available()) {
    String data = Serial2.readStringUntil('\n');
    Serial.println("Received from Arduino: " + data);
    
    // Get current time
    struct tm timeinfo;
    if(!getLocalTime(&timeinfo)){
      Serial.println("Failed to obtain time");
    } else {
      char timeStringBuffer[30];
      strftime(timeStringBuffer, sizeof(timeStringBuffer), "%Y-%m-%d %H:%M:%S", &timeinfo);
      
      // Create JSON document
      DynamicJsonDocument doc(1024);
      doc["weight"] = data.toFloat();
      doc["timestamp"] = timeStringBuffer;
      
      // Send to server
      if(WiFi.status() == WL_CONNECTED) {
        String jsonData;
        serializeJson(doc, jsonData);
        sendToServer(jsonData);
      }
    }
  }
}

void sendToServer(String jsonData) {
  HTTPClient http;
  
  // Begin HTTP connection
  http.begin(serverUrl);
  http.addHeader("Content-Type", "application/json");
  
  // Send POST request
  int httpResponseCode = http.POST(jsonData);
  
  // Check response
  if (httpResponseCode > 0) {
    String response = http.getString();
    Serial.println("HTTP Response code: " + String(httpResponseCode));
    Serial.println("Response: " + response);
  } else {
    Serial.println("Error on sending POST: " + String(httpResponseCode));
  }
  
  http.end();
}
