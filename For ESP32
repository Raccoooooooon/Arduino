#include <WiFi.h>
#include <HTTPClient.h>
#include <ArduinoJson.h>
#include "time.h"

// WiFi credentials
const char* ssid = "AKATSUKI";
const char* password = "2D6D629D";

// Firebase URL
const char* serverUrl = "https://inventorysystem-156d6-default-rtdb.firebaseio.com/sales.json";
const char* apiKey = "AIzaSyBzzfXvGm2bGm8ZWlZ6Ef28yB2zvzw9Kbc";
const char* deviceId = "rice_dispenser_001";

// Timezone
const char* ntpServer = "pool.ntp.org";
const long gmtOffset_sec = 28800;
const int daylightOffset_sec = 0;

// Serial pins
#define RXD2 16
#define TXD2 17

String saleTimestamp = "";

void setup() {
  Serial.begin(9600);             // Debugging
  Serial2.begin(9600, SERIAL_8N1, RXD2, TXD2); // Communication with Arduino

  WiFi.begin(ssid, password);
  Serial.print("Connecting to WiFi");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nConnected to WiFi");

  configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);
  struct tm timeinfo;
  if (getLocalTime(&timeinfo)) {
    Serial.println("Time synced");
  } else {
    Serial.println("Time sync failed");
  }
}

void loop() {
  if (Serial2.available()) {
    String data = Serial2.readStringUntil('\n');
    data.trim();

    int kgIndex = data.indexOf("KG:");
    int pesoIndex = data.indexOf("PESO:");

    if (kgIndex != -1 && pesoIndex != -1) {
      String kgStr = data.substring(kgIndex + 3, pesoIndex - 1);
      String pesoStr = data.substring(pesoIndex + 5);

      float kg = kgStr.toFloat();
      float peso = pesoStr.toFloat();

      if (kg > 0 && peso > 0) {
        struct tm timeinfo;
        if (getLocalTime(&timeinfo)) {
          char timeBuffer[50];
          strftime(timeBuffer, sizeof(timeBuffer), "%Y-%m-%d %H:%M:%S", &timeinfo);
          saleTimestamp = String(timeBuffer);
        } else {
          saleTimestamp = String(millis());
        }

        Serial.print("Received: KG=");
        Serial.print(kg);
        Serial.print(" Peso=");
        Serial.println(peso);

        sendSaleData(kg, peso);
      }
    }
  }

  delay(100);
}

void sendSaleData(float kg, float pesoAmount) {
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;
    http.begin(serverUrl);
    http.addHeader("Content-Type", "application/json");

    if (strlen(apiKey) > 0) {
      http.addHeader("Authorization", "Bearer " + String(apiKey));
    }

    DynamicJsonDocument doc(1024);
    doc["weight"] = kg;
    doc["peso"] = pesoAmount;
    doc["timestamp"] = saleTimestamp;
    doc["device_id"] = deviceId;
    doc["status"] = "completed";

    String requestBody;
    serializeJson(doc, requestBody);

    int responseCode = http.POST(requestBody);
    if (responseCode > 0) {
      String response = http.getString();
      Serial.println("POST Success: " + String(responseCode));
      Serial.println("Response: " + response);
    } else {
      Serial.print("POST Failed, Code: ");
      Serial.println(responseCode);
    }

    http.end();
  } else {
    Serial.println("WiFi Disconnected. Reconnecting...");
    WiFi.begin(ssid, password);
  }
}
